---
- name: Install and configure nginx
  hosts: webservers
  become: yes
  gather_facts: yes
  
  tasks:
    - name: Update package cache (RedHat/CentOS)
      yum:
        update_cache: yes
      when: ansible_os_family == "RedHat"
      changed_when: false

    - name: Install nginx
      package:
        name: nginx
        state: present
      register: nginx_install

    - name: Check if port 80 is already in use
      shell: netstat -tlnp | grep :80 || echo "Port 80 is available"
      register: port_check
      changed_when: false

    - name: Display port 80 status
      debug:
        var: port_check.stdout_lines

    - name: Stop any service using port 80 (httpd/apache)
      service:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop:
        - httpd
        - apache2
      ignore_errors: yes

    - name: Check if nginx.conf backup exists
      stat:
        path: /etc/nginx/nginx.conf.backup
      register: nginx_backup_exists

    - name: Backup original nginx.conf
      copy:
        src: /etc/nginx/nginx.conf
        dest: /etc/nginx/nginx.conf.backup
        remote_src: yes
        backup: no
      when: not nginx_backup_exists.stat.exists
      ignore_errors: yes

    - name: Ensure nginx directories exist
      file:
        path: "{{ item.path }}"
        state: directory
        mode: '0755'
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
      loop:
        - { path: "/etc/nginx/conf.d", owner: "root", group: "root" }
        - { path: "/var/log/nginx", owner: "nginx", group: "nginx" }
        - { path: "/var/cache/nginx", owner: "nginx", group: "nginx" }

    - name: Remove default nginx config that might conflict
      file:
        path: /etc/nginx/conf.d/default.conf
        state: absent
      ignore_errors: yes

    - name: Create minimal main nginx.conf
      copy:
        content: |
          user nginx;
          worker_processes auto;
          error_log /var/log/nginx/error.log;
          pid /run/nginx.pid;

          events {
              worker_connections 1024;
          }

          http {
              log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for"';

              access_log  /var/log/nginx/access.log  main;

              sendfile            on;
              tcp_nopush          on;
              tcp_nodelay         on;
              keepalive_timeout   65;
              types_hash_max_size 2048;

              include             /etc/nginx/mime.types;
              default_type        application/octet-stream;

              # Include server configs
              include /etc/nginx/conf.d/*.conf;
          }
        dest: /etc/nginx/nginx.conf
        mode: '0644'
        owner: root
        group: root
        backup: yes
      register: nginx_main_config

    - name: Test nginx configuration syntax
      command: nginx -t
      register: nginx_config_test
      changed_when: false
      ignore_errors: yes

    - name: Display nginx config test result
      debug:
        var: nginx_config_test

    - name: Create nginx user if it doesn't exist
      user:
        name: nginx
        system: yes
        shell: /sbin/nologin
        home: /var/cache/nginx
        create_home: no
      ignore_errors: yes



    - name: Set SELinux boolean for nginx
      seboolean:
        name: httpd_can_network_connect
        state: yes
        persistent: yes
      when: ansible_selinux.status == "enabled"
      ignore_errors: yes

    - name: Create custom nginx configuration
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/conf.d/custom.conf
        mode: '0644'
        owner: root
        group: root
        backup: yes
      register: nginx_config
      notify: reload nginx

    - name: Test nginx configuration after custom config
      command: nginx -t
      register: nginx_final_test
      changed_when: false

    - name: Display final nginx config test
      debug:
        var: nginx_final_test

    - name: Start and enable nginx service
      service:
        name: nginx
        state: started
        enabled: yes
      register: nginx_service

    - name: Create web root directory
      file:
        path: /var/www/html
        state: directory
        mode: '0755'
        owner: nginx
        group: nginx

    - name: Check if custom index.html already exists
      stat:
        path: /var/www/html/index.html
      register: index_html_exists

    - name: Create index.html
      copy:
        content: |
          <!DOCTYPE html>
          <html>
          <head>
              <title>Welcome to nginx!</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  .container { max-width: 800px; margin: 0 auto; }
                  .header { background: #f0f0f0; padding: 20px; border-radius: 5px; }
                  .content { margin-top: 20px; }
              </style>
          </head>
          <body>
              <div class="container">
                  <div class="header">
                      <h1>ðŸŽ‰ Nginx Successfully Configured!</h1>
                      <p>Server: {{ ansible_hostname }}</p>
                      <p>IP: {{ ansible_default_ipv4.address }}</p>
                  </div>
                  <div class="content">
                      <h2>System Information</h2>
                      <ul>
                          <li>OS: {{ ansible_distribution }} {{ ansible_distribution_version }}</li>
                          <li>Kernel: {{ ansible_kernel }}</li>
                          <li>Architecture: {{ ansible_architecture }}</li>
                      </ul>
                  </div>
              </div>
          </body>
          </html>
        dest: /var/www/html/index.html
        mode: '0644'
        owner: nginx
        group: nginx
        backup: yes
        force: no
      when: not index_html_exists.stat.exists

    - name: Configure firewall for nginx
      ansible.posix.firewalld:
        service: http
        permanent: yes
        state: enabled
        immediate: yes
      when: ansible_os_family == "RedHat"
      ignore_errors: yes

    - name: Verify nginx is running
      uri:
        url: "http://{{ ansible_default_ipv4.address }}"
        method: GET
        timeout: 10
        status_code: [200, 403]
      register: nginx_test
      ignore_errors: yes
      changed_when: false

    - name: Display nginx status
      debug:
        msg: 
          - "Nginx installation completed"
          - "Service status: {{ nginx_service.state | default('unknown') }}"
          - "HTTP test: {{ 'SUCCESS' if nginx_test.status is defined and nginx_test.status == 200 else 'FAILED' }}"

  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded
      when: nginx_service is defined and nginx_service.state == "started" 